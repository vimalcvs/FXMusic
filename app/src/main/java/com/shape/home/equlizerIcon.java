package com.shape.home;import android.content.Context;import android.graphics.LinearGradient;import android.graphics.Path;import vimalcvs.api.ShapeView;import vimalcvs.api.shapeImg;import android.graphics.Paint;import android.graphics.Canvas;import com.vimal.player.Ui;public class equlizerIcon extends shapeImg{ class Path0 extends Path{  	public Path0() {			moveTo(11.5f, 0f);			lineTo(28.5f, 0f);			quadTo(40f, 0f, 40f, 11.5f);			lineTo(40f, 50.5f);			quadTo(40f, 62f, 28.5f, 62f);			lineTo(11.5f, 62f);			quadTo(0f, 62f, 0f, 50.5f);			lineTo(0f, 11.5f);			quadTo(0f, 0f, 11.5f, 0f);	}}class Path1 extends Path{  	public Path1() {			moveTo(12.4f, 8.8f);			lineTo(12.7f, 9.5f);			lineTo(12.7f, 52.55f);			lineTo(12.4f, 53.25f);			quadTo(12.1f, 53.55f, 11.7f, 53.55f);			lineTo(11f, 53.25f);			quadTo(10.7f, 52.95f, 10.7f, 52.55f);			lineTo(10.7f, 9.5f);			quadTo(10.7f, 9.1f, 11f, 8.8f);			quadTo(11.3f, 8.5f, 11.7f, 8.5f);			quadTo(12.1f, 8.5f, 12.4f, 8.8f);	}}class Path2 extends Path{  	public Path2() {			moveTo(20.7f, 8.8f);			lineTo(21f, 9.5f);			lineTo(21f, 52.55f);			lineTo(20.7f, 53.25f);			lineTo(20f, 53.55f);			lineTo(19.3f, 53.25f);			quadTo(19f, 52.95f, 19f, 52.55f);			lineTo(19f, 9.5f);			quadTo(19f, 9.1f, 19.3f, 8.8f);			quadTo(19.6f, 8.5f, 20f, 8.5f);			quadTo(20.4f, 8.5f, 20.7f, 8.8f);	}}class Path3 extends Path{  	public Path3() {			moveTo(29.05f, 8.8f);			lineTo(29.35f, 9.5f);			lineTo(29.35f, 52.55f);			lineTo(29.05f, 53.25f);			lineTo(28.35f, 53.55f);			lineTo(27.65f, 53.25f);			quadTo(27.35f, 52.95f, 27.35f, 52.55f);			lineTo(27.35f, 9.5f);			quadTo(27.35f, 9.1f, 27.65f, 8.8f);			quadTo(27.95f, 8.5f, 28.35f, 8.5f);			quadTo(28.75f, 8.5f, 29.05f, 8.8f);	}}class Path4 extends Path{  	public Path4() {			moveTo(22.5f, 43.75f);			quadTo(22.5f, 44.8f, 21.75f, 45.5f);			quadTo(21.05f, 46.25f, 20f, 46.25f);			quadTo(18.95f, 46.25f, 18.2f, 45.5f);			quadTo(17.5f, 44.8f, 17.5f, 43.75f);			lineTo(17.5f, 36.75f);			quadTo(17.5f, 35.7f, 18.2f, 34.95f);			quadTo(18.95f, 34.25f, 20f, 34.25f);			quadTo(21.05f, 34.25f, 21.75f, 34.95f);			quadTo(22.5f, 35.7f, 22.5f, 36.75f);			lineTo(22.5f, 43.75f);	}}class Path5 extends Path{  	public Path5() {			moveTo(14.15f, 26.5f);			quadTo(14.15f, 27.55f, 13.4f, 28.25f);			quadTo(12.7f, 29f, 11.65f, 29f);			quadTo(10.6f, 29f, 9.85f, 28.25f);			quadTo(9.15f, 27.55f, 9.15f, 26.5f);			lineTo(9.15f, 19.5f);			quadTo(9.15f, 18.45f, 9.85f, 17.7f);			quadTo(10.6f, 17f, 11.65f, 17f);			quadTo(12.7f, 17f, 13.4f, 17.7f);			quadTo(14.15f, 18.45f, 14.15f, 19.5f);			lineTo(14.15f, 26.5f);	}}class Path6 extends Path{  	public Path6() {			moveTo(30.85f, 26.5f);			quadTo(30.85f, 27.55f, 30.1f, 28.25f);			quadTo(29.4f, 29f, 28.35f, 29f);			quadTo(27.3f, 29f, 26.55f, 28.25f);			quadTo(25.85f, 27.55f, 25.85f, 26.5f);			lineTo(25.85f, 19.5f);			quadTo(25.85f, 18.45f, 26.55f, 17.7f);			quadTo(27.3f, 17f, 28.35f, 17f);			quadTo(29.4f, 17f, 30.1f, 17.7f);			quadTo(30.85f, 18.45f, 30.85f, 19.5f);			lineTo(30.85f, 26.5f);	}}		public Paint P0 = new Paint(); 		public static int Color0 = (0x0054497c); 		public Path0 S0 = new Path0();		public Paint P1 = new Paint(); 		public static int Color1 = (0xFF60538c); 		public Path1 S1 = new Path1();		public Paint P2 = new Paint(); 		public static int Color2 = (0xFF60538c); 		public Path2 S2 = new Path2();		public Paint P3 = new Paint(); 		public static int Color3 = (0xFF60538c); 		public Path3 S3 = new Path3();		public Paint P4 = new Paint(); 		public static int Color4 = (0xFFcccccc); 		public Path4 S4 = new Path4();		public Paint P5 = new Paint(); 		public static int Color5 = (0xFFcccccc); 		public Path5 S5 = new Path5();		public Paint P6 = new Paint(); 		public static int Color6 = (0xFFcccccc); 		public Path6 S6 = new Path6();		public static float Ht = 62F; 		public static float Wh = 40F;  		public equlizerIcon(int width,int height,int x,int y) {			this.width = width;			this.height = height;			init((float)width/(float)Wh, (float)height/(float)Ht, x, y); 			LinearGradient Lg  = null;			S0.transform(matrix);			P0.setColor(0x0054497c);			P0.setAntiAlias(true);			S1.transform(matrix);			P1.setColor(0xFF60538c);			P1.setAntiAlias(true);			S2.transform(matrix);			P2.setColor(0xFF60538c);			P2.setAntiAlias(true);			S3.transform(matrix);			P3.setColor(0xFF60538c);			P3.setAntiAlias(true);			S4.transform(matrix);			P4.setColor(0xFFcccccc);			P4.setAntiAlias(true);			S5.transform(matrix);			P5.setColor(0xFFcccccc);			P5.setAntiAlias(true);			S6.transform(matrix);			P6.setColor(0xFFcccccc);			P6.setAntiAlias(true);			mask = S0;			maskPaint = P0;		} 		public void draw(Canvas canvas) { 			if(drawing){				canvas.drawPath(S0, P0);				canvas.drawPath(S1, P1);				canvas.drawPath(S2, P2);				canvas.drawPath(S3, P3);				canvas.drawPath(S4, P4);				canvas.drawPath(S5, P5);				canvas.drawPath(S6, P6);			}		} 		@Override 		public void setX(int x) {			super.setX(x);			 S0.transform(matrix);			 S1.transform(matrix);			 S2.transform(matrix);			 S3.transform(matrix);			 S4.transform(matrix);			 S5.transform(matrix);			 S6.transform(matrix);		} 		@Override 		public void setY(int x) {			super.setY(x);			 S0.transform(matrix);			 S1.transform(matrix);			 S2.transform(matrix);			 S3.transform(matrix);			 S4.transform(matrix);			 S5.transform(matrix);			 S6.transform(matrix);		} 		@Override 		public void setSize(int wh, int ht) {			super.setSize(wh, ht);			 S0.transform(matrix);			 S1.transform(matrix);			 S2.transform(matrix);			 S3.transform(matrix);			 S4.transform(matrix);			 S5.transform(matrix);			 S6.transform(matrix);		} 		 public static ShapeView getFMview(Context context,boolean mask){		   ShapeView view = new ShapeView(context, Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht));		   final equlizerIcon viewImg = new equlizerIcon(Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht),0,0);		   view.mask = mask;		   view.img = viewImg;		   viewImg.mask = viewImg.S0;		   viewImg.maskPaint = viewImg.P0; 		   return view;		 }      		 public static equlizerIcon getShape(){		   final equlizerIcon viewImg = new equlizerIcon(Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht),0,0);		   viewImg.mask = viewImg.S0;		   viewImg.maskPaint = viewImg.P0; 		   return viewImg;		 }     }//Finished...! 