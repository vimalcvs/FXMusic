package com.shape.home.menu;import android.content.Context;import android.graphics.LinearGradient;import android.graphics.Path;import vimalcvs.api.ShapeView;import vimalcvs.api.shapeImg;import android.graphics.Paint;import android.graphics.Canvas;import com.vimal.player.Ui;public class bassTop extends shapeImg{ class Path0 extends Path{  	public Path0() {			moveTo(150f, 0f);			lineTo(150f, 150f);			lineTo(0f, 150f);			lineTo(0f, 0f);			lineTo(150f, 0f);	}}class Path1 extends Path{  	public Path1() {			moveTo(127.2f, 75f);			quadTo(127.2f, 64.85f, 123.85f, 56.1f);			quadTo(120f, 46.2f, 111.9f, 38.1f);			quadTo(96.6f, 22.8f, 75f, 22.8f);			quadTo(53.4f, 22.8f, 38.05f, 38.1f);			quadTo(29.95f, 46.2f, 26.2f, 56.1f);			quadTo(22.8f, 64.85f, 22.8f, 75f);			quadTo(22.8f, 96.65f, 38.05f, 111.9f);			quadTo(47.85f, 121.65f, 60.2f, 125.2f);			quadTo(67.2f, 127.2f, 75f, 127.2f);			quadTo(82.8f, 127.2f, 89.8f, 125.2f);			quadTo(102.15f, 121.65f, 111.9f, 111.9f);			quadTo(127.2f, 96.65f, 127.2f, 75f);			moveTo(130.2f, 75f);			quadTo(130.2f, 97.9f, 114f, 114.05f);			quadTo(103.7f, 124.35f, 90.65f, 128.1f);			quadTo(83.25f, 130.2f, 75f, 130.2f);			quadTo(66.75f, 130.2f, 59.35f, 128.1f);			quadTo(46.3f, 124.35f, 35.95f, 114.05f);			quadTo(19.8f, 97.9f, 19.8f, 75f);			quadTo(19.8f, 64.25f, 23.4f, 55f);			quadTo(27.35f, 44.55f, 35.95f, 36f);			quadTo(52.15f, 19.8f, 75f, 19.8f);			quadTo(97.85f, 19.8f, 114f, 36f);			quadTo(122.6f, 44.55f, 126.65f, 55f);			quadTo(130.2f, 64.25f, 130.2f, 75f);	}}class Path2 extends Path{  	public Path2() {			moveTo(136.2f, 75f);			quadTo(136.2f, 100.4f, 118.25f, 118.3f);			quadTo(106.8f, 129.7f, 92.35f, 133.85f);			quadTo(84.15f, 136.2f, 75f, 136.2f);			quadTo(65.85f, 136.2f, 57.65f, 133.85f);			quadTo(43.2f, 129.7f, 31.7f, 118.3f);			quadTo(13.8f, 100.4f, 13.8f, 75f);			quadTo(13.8f, 63.1f, 17.8f, 52.85f);			quadTo(22.15f, 41.25f, 31.7f, 31.75f);			quadTo(49.65f, 13.8f, 75f, 13.8f);			quadTo(100.35f, 13.8f, 118.25f, 31.75f);			quadTo(127.75f, 41.25f, 132.25f, 52.85f);			quadTo(136.2f, 63.1f, 136.2f, 75f);	}}		public Paint P0 = new Paint(); 		public static int Color0 = (0x00ffffff); 		public Path0 S0 = new Path0();		public Paint P1 = new Paint(); 		public static int Color1 = (0xFFd35d69); 		public Path1 S1 = new Path1();		public Paint P2 = new Paint(); 		public static int Color2 = (0x00d35d69); 		public Path2 S2 = new Path2();		public static float Ht = 150F; 		public static float Wh = 150F;  		public bassTop(int width,int height,int x,int y) {			this.width = width;			this.height = height;			init((float)width/(float)Wh, (float)height/(float)Ht, x, y); 			LinearGradient Lg  = null;			S0.transform(matrix);			P0.setColor(0x00ffffff);			P0.setAntiAlias(true);			S1.transform(matrix);			P1.setColor(0xFFd35d69);			P1.setAntiAlias(true);			S2.transform(matrix);			P2.setColor(0x00d35d69);			P2.setAntiAlias(true);			mask = S0;			maskPaint = P0;		} 		public void draw(Canvas canvas) { 			if(drawing){				canvas.drawPath(S0, P0);				canvas.drawPath(S1, P1);				canvas.drawPath(S2, P2);			}		} 		@Override 		public void setX(int x) {			super.setX(x);			 S0.transform(matrix);			 S1.transform(matrix);			 S2.transform(matrix);		} 		@Override 		public void setY(int x) {			super.setY(x);			 S0.transform(matrix);			 S1.transform(matrix);			 S2.transform(matrix);		} 		@Override 		public void setSize(int wh, int ht) {			super.setSize(wh, ht);			 S0.transform(matrix);			 S1.transform(matrix);			 S2.transform(matrix);		} 		 public static ShapeView getFMview(Context context,boolean mask){		   ShapeView view = new ShapeView(context, Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht));		   final bassTop viewImg = new bassTop(Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht),0,0);		   view.mask = mask;		   view.img = viewImg;		   viewImg.mask = viewImg.S0;		   viewImg.maskPaint = viewImg.P0; 		   return view;		 }      		 public static bassTop getShape(){		   final bassTop viewImg = new bassTop(Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht),0,0);		   viewImg.mask = viewImg.S0;		   viewImg.maskPaint = viewImg.P0; 		   return viewImg;		 }     }//Finished...! 