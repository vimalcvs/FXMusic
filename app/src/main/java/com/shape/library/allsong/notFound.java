package com.shape.library.allsong;import android.content.Context;import android.graphics.LinearGradient;import android.graphics.Path;import vimalcvs.api.ShapeView;import vimalcvs.api.shapeImg;import android.graphics.Paint;import android.graphics.Canvas;import com.vimal.player.Ui;public class notFound extends shapeImg{ class Path0 extends Path{  	public Path0() {			moveTo(0f, 48f);			lineTo(0f, 13f);			quadTo(0f, 0f, 13f, 0f);			lineTo(178f, 0f);			quadTo(191f, 0f, 191f, 13f);			lineTo(191f, 48f);			quadTo(191f, 61f, 178f, 61f);			lineTo(13f, 61f);			quadTo(0f, 61f, 0f, 48f);	}}class Path1 extends Path{  	public Path1() {			moveTo(71.45f, 36.1f);			lineTo(70.05f, 36.1f);			lineTo(70.05f, 24.9f);			lineTo(71.45f, 24.9f);			lineTo(71.45f, 36.1f);			moveTo(140.25f, 25f);			quadTo(141f, 25.3f, 141.45f, 25.95f);			lineTo(142.15f, 27.7f);			lineTo(142.4f, 30.5f);			lineTo(142.15f, 33.3f);			lineTo(141.45f, 35.05f);			quadTo(141f, 35.7f, 140.25f, 36f);			lineTo(138.6f, 36.25f);			lineTo(137.25f, 36.2f);			lineTo(136f, 35.95f);			lineTo(136f, 25.05f);			lineTo(137.25f, 24.8f);			lineTo(138.6f, 24.75f);			lineTo(140.25f, 25f);			moveTo(140.3f, 26.75f);			lineTo(139.55f, 26f);			lineTo(138.6f, 25.8f);			lineTo(137.45f, 25.8f);			lineTo(137.45f, 35.2f);			lineTo(138.6f, 35.2f);			lineTo(139.55f, 35f);			lineTo(140.3f, 34.25f);			lineTo(140.8f, 32.8f);			lineTo(141f, 30.5f);			lineTo(140.8f, 28.2f);			quadTo(140.65f, 27.25f, 140.3f, 26.75f);			moveTo(133.75f, 24.9f);			lineTo(133.75f, 36.1f);			lineTo(132.15f, 36.1f);			lineTo(128.9f, 28.2f);			lineTo(128.8f, 28.2f);			lineTo(128.8f, 36.1f);			lineTo(127.35f, 36.1f);			lineTo(127.35f, 24.9f);			lineTo(128.95f, 24.9f);			lineTo(132.25f, 32.8f);			lineTo(132.35f, 32.8f);			lineTo(132.35f, 24.9f);			lineTo(133.75f, 24.9f);			moveTo(125.3f, 24.9f);			lineTo(125.3f, 32.25f);			lineTo(125.1f, 34.15f);			lineTo(124.55f, 35.4f);			lineTo(123.55f, 36.05f);			lineTo(122.1f, 36.25f);			lineTo(120.65f, 36.05f);			lineTo(119.65f, 35.4f);			quadTo(119.3f, 34.95f, 119.1f, 34.15f);			lineTo(118.9f, 32.25f);			lineTo(118.9f, 24.9f);			lineTo(120.35f, 24.9f);			lineTo(120.35f, 32.25f);			lineTo(120.45f, 33.75f);			lineTo(120.8f, 34.7f);			lineTo(121.35f, 35.15f);			lineTo(122.1f, 35.3f);			lineTo(122.85f, 35.15f);			lineTo(123.4f, 34.7f);			lineTo(123.75f, 33.75f);			lineTo(123.85f, 32.25f);			lineTo(123.85f, 24.9f);			lineTo(125.3f, 24.9f);			moveTo(95.65f, 27.8f);			lineTo(93.35f, 34.65f);			lineTo(91.9f, 34.65f);			lineTo(89.6f, 27.8f);			lineTo(89.5f, 27.8f);			lineTo(89f, 36.1f);			lineTo(87.6f, 36.1f);			lineTo(88.2f, 24.9f);			lineTo(90f, 24.9f);			lineTo(92.6f, 32.6f);			lineTo(92.65f, 32.6f);			lineTo(95.25f, 24.9f);			lineTo(97f, 24.9f);			lineTo(97.65f, 36.1f);			lineTo(96.2f, 36.1f);			lineTo(95.75f, 27.8f);			lineTo(95.65f, 27.8f);			moveTo(86.05f, 26f);			lineTo(82.05f, 26f);			lineTo(82.05f, 29.7f);			lineTo(85.6f, 29.7f);			lineTo(85.6f, 30.8f);			lineTo(82.05f, 30.8f);			lineTo(82.05f, 35f);			lineTo(86.05f, 35f);			lineTo(86.05f, 36.1f);			lineTo(80.65f, 36.1f);			lineTo(80.65f, 24.9f);			lineTo(86.05f, 24.9f);			lineTo(86.05f, 26f);			moveTo(117.15f, 30.5f);			lineTo(116.9f, 33.3f);			lineTo(116.2f, 35.05f);			quadTo(115.75f, 35.7f, 115.15f, 36f);			lineTo(113.7f, 36.25f);			lineTo(112.25f, 36f);			lineTo(111.15f, 35.05f);			quadTo(110.7f, 34.4f, 110.5f, 33.3f);			quadTo(110.25f, 32.2f, 110.25f, 30.5f);			quadTo(110.25f, 28.8f, 110.5f, 27.7f);			quadTo(110.7f, 26.6f, 111.15f, 25.95f);			quadTo(111.6f, 25.3f, 112.25f, 25f);			lineTo(113.7f, 24.75f);			lineTo(115.15f, 25f);			quadTo(115.75f, 25.3f, 116.2f, 25.95f);			quadTo(116.65f, 26.6f, 116.9f, 27.7f);			lineTo(117.15f, 30.5f);			moveTo(114.45f, 25.9f);			lineTo(113.7f, 25.7f);			lineTo(112.95f, 25.9f);			quadTo(112.55f, 26.1f, 112.3f, 26.65f);			quadTo(112f, 27.2f, 111.85f, 28.15f);			quadTo(111.7f, 29.05f, 111.7f, 30.5f);			quadTo(111.7f, 31.95f, 111.85f, 32.85f);			quadTo(112f, 33.8f, 112.3f, 34.35f);			quadTo(112.55f, 34.9f, 112.95f, 35.1f);			lineTo(113.7f, 35.3f);			lineTo(114.45f, 35.1f);			lineTo(115.1f, 34.35f);			lineTo(115.5f, 32.85f);			lineTo(115.7f, 30.5f);			lineTo(115.5f, 28.15f);			lineTo(115.1f, 26.65f);			lineTo(114.45f, 25.9f);			moveTo(109.1f, 26f);			lineTo(105.1f, 26f);			lineTo(105.1f, 29.95f);			lineTo(108.45f, 29.95f);			lineTo(108.45f, 31.05f);			lineTo(105.1f, 31.05f);			lineTo(105.1f, 36.1f);			lineTo(103.7f, 36.1f);			lineTo(103.7f, 24.9f);			lineTo(109.1f, 24.9f);			lineTo(109.1f, 26f);			moveTo(59.05f, 26.65f);			quadTo(58.75f, 27.2f, 58.6f, 28.15f);			quadTo(58.45f, 29.05f, 58.45f, 30.5f);			quadTo(58.45f, 31.95f, 58.6f, 32.85f);			quadTo(58.75f, 33.8f, 59.05f, 34.35f);			quadTo(59.3f, 34.9f, 59.7f, 35.1f);			lineTo(60.45f, 35.3f);			lineTo(61.2f, 35.1f);			lineTo(61.85f, 34.35f);			lineTo(62.25f, 32.85f);			lineTo(62.45f, 30.5f);			lineTo(62.25f, 28.15f);			lineTo(61.85f, 26.65f);			lineTo(61.2f, 25.9f);			lineTo(60.45f, 25.7f);			lineTo(59.7f, 25.9f);			quadTo(59.3f, 26.1f, 59.05f, 26.65f);			moveTo(57.25f, 27.7f);			quadTo(57.45f, 26.6f, 57.9f, 25.95f);			quadTo(58.35f, 25.3f, 59f, 25f);			lineTo(60.45f, 24.75f);			lineTo(61.9f, 25f);			quadTo(62.5f, 25.3f, 62.95f, 25.95f);			lineTo(63.65f, 27.7f);			lineTo(63.9f, 30.5f);			lineTo(63.65f, 33.3f);			lineTo(62.95f, 35.05f);			lineTo(61.9f, 36f);			lineTo(60.45f, 36.25f);			lineTo(59f, 36f);			quadTo(58.35f, 35.7f, 57.9f, 35.05f);			quadTo(57.45f, 34.4f, 57.25f, 33.3f);			quadTo(57f, 32.2f, 57f, 30.5f);			quadTo(57f, 28.8f, 57.25f, 27.7f);			moveTo(55.05f, 24.9f);			lineTo(55.05f, 36.1f);			lineTo(53.45f, 36.1f);			lineTo(50.2f, 28.2f);			lineTo(50.1f, 28.2f);			lineTo(50.1f, 36.1f);			lineTo(48.65f, 36.1f);			lineTo(48.65f, 24.9f);			lineTo(50.25f, 24.9f);			lineTo(53.55f, 32.8f);			lineTo(53.65f, 32.8f);			lineTo(53.65f, 24.9f);			lineTo(55.05f, 24.9f);			moveTo(79.3f, 26f);			lineTo(76.75f, 26f);			lineTo(76.75f, 36.1f);			lineTo(75.3f, 36.1f);			lineTo(75.3f, 26f);			lineTo(72.75f, 26f);			lineTo(72.75f, 24.9f);			lineTo(79.3f, 24.9f);			lineTo(79.3f, 26f);	}}		public Paint P0 = new Paint(); 		public static int Color0 = (0x26000000); 		public Path0 S0 = new Path0();		public Paint P1 = new Paint(); 		public static int Color1 = (0x99ffffff); 		public Path1 S1 = new Path1();		public static float Ht = 61F; 		public static float Wh = 191F;  		public notFound(int width,int height,int x,int y) {			this.width = width;			this.height = height;			init((float)width/(float)Wh, (float)height/(float)Ht, x, y); 			LinearGradient Lg  = null;			S0.transform(matrix);			P0.setColor(0x26000000);			P0.setAntiAlias(true);			S1.transform(matrix);			P1.setColor(0x99ffffff);			P1.setAntiAlias(true);			mask = S0;			maskPaint = P0;		} 		public void draw(Canvas canvas) { 			if(drawing){				canvas.drawPath(S0, P0);				canvas.drawPath(S1, P1);			}		} 		@Override 		public void setX(int x) {			super.setX(x);			 S0.transform(matrix);			 S1.transform(matrix);		} 		@Override 		public void setY(int x) {			super.setY(x);			 S0.transform(matrix);			 S1.transform(matrix);		} 		@Override 		public void setSize(int wh, int ht) {			super.setSize(wh, ht);			 S0.transform(matrix);			 S1.transform(matrix);		} 		 public static ShapeView getFMview(Context context,boolean mask){		   ShapeView view = new ShapeView(context, Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht));		   final notFound viewImg = new notFound(Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht),0,0);		   view.mask = mask;		   view.img = viewImg;		   viewImg.mask = viewImg.S0;		   viewImg.maskPaint = viewImg.P0; 		   return view;		 }      		 public static notFound getShape(){		   final notFound viewImg = new notFound(Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht),0,0);		   viewImg.mask = viewImg.S0;		   viewImg.maskPaint = viewImg.P0; 		   return viewImg;		 }     }//Finished...! 