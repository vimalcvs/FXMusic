package com.shape.library.icon;import android.content.Context;import android.graphics.LinearGradient;import android.graphics.Path;import vimalcvs.api.ShapeView;import vimalcvs.api.shapeImg;import android.graphics.Paint;import android.graphics.Canvas;import com.vimal.player.Ui;public class eqlizerIcon extends shapeImg{ class Path0 extends Path{  	public Path0() {			moveTo(37f, 0f);			quadTo(50f, 0f, 50f, 13f);			lineTo(50f, 37f);			quadTo(50f, 50f, 37f, 50f);			lineTo(13f, 50f);			quadTo(0f, 50f, 0f, 37f);			lineTo(0f, 13f);			quadTo(0f, 0f, 13f, 0f);			lineTo(37f, 0f);	}}class Path1 extends Path{  	public Path1() {			moveTo(16f, 9.4f);			quadTo(16f, 9f, 16.3f, 8.7f);			quadTo(16.6f, 8.4f, 17f, 8.4f);			lineTo(17.7f, 8.7f);			lineTo(18f, 9.4f);			lineTo(18f, 40.65f);			lineTo(17.7f, 41.35f);			lineTo(17f, 41.65f);			quadTo(16.6f, 41.65f, 16.3f, 41.35f);			quadTo(16f, 41.05f, 16f, 40.65f);			lineTo(16f, 9.4f);	}}class Path2 extends Path{  	public Path2() {			moveTo(18.4f, 13.85f);			quadTo(19f, 14.45f, 19f, 15.25f);			lineTo(19f, 21.25f);			quadTo(19f, 22.05f, 18.4f, 22.65f);			quadTo(17.8f, 23.25f, 17f, 23.25f);			quadTo(16.2f, 23.25f, 15.6f, 22.65f);			quadTo(15f, 22.05f, 15f, 21.25f);			lineTo(15f, 15.25f);			quadTo(15f, 14.45f, 15.6f, 13.85f);			quadTo(16.2f, 13.25f, 17f, 13.25f);			quadTo(17.8f, 13.25f, 18.4f, 13.85f);	}}class Path3 extends Path{  	public Path3() {			moveTo(24f, 9.4f);			quadTo(24f, 9f, 24.3f, 8.7f);			quadTo(24.6f, 8.4f, 25f, 8.4f);			quadTo(25.4f, 8.4f, 25.7f, 8.7f);			lineTo(26f, 9.4f);			lineTo(26f, 40.65f);			lineTo(25.7f, 41.35f);			lineTo(25f, 41.65f);			lineTo(24.3f, 41.35f);			quadTo(24f, 41.05f, 24f, 40.65f);			lineTo(24f, 9.4f);	}}class Path4 extends Path{  	public Path4() {			moveTo(26.4f, 27.6f);			quadTo(27f, 28.2f, 27f, 29f);			lineTo(27f, 35f);			quadTo(27f, 35.8f, 26.4f, 36.4f);			quadTo(25.8f, 37f, 25f, 37f);			quadTo(24.2f, 37f, 23.6f, 36.4f);			quadTo(23f, 35.8f, 23f, 35f);			lineTo(23f, 29f);			quadTo(23f, 28.2f, 23.6f, 27.6f);			quadTo(24.2f, 27f, 25f, 27f);			quadTo(25.8f, 27f, 26.4f, 27.6f);	}}class Path5 extends Path{  	public Path5() {			moveTo(32f, 9.4f);			quadTo(32f, 9f, 32.3f, 8.7f);			quadTo(32.6f, 8.4f, 33f, 8.4f);			quadTo(33.4f, 8.4f, 33.7f, 8.7f);			lineTo(34f, 9.4f);			lineTo(34f, 40.65f);			lineTo(33.7f, 41.35f);			lineTo(33f, 41.65f);			lineTo(32.3f, 41.35f);			quadTo(32f, 41.05f, 32f, 40.65f);			lineTo(32f, 9.4f);	}}class Path6 extends Path{  	public Path6() {			moveTo(34.4f, 13.6f);			quadTo(35f, 14.2f, 35f, 15f);			lineTo(35f, 21f);			quadTo(35f, 21.8f, 34.4f, 22.4f);			quadTo(33.8f, 23f, 33f, 23f);			quadTo(32.2f, 23f, 31.6f, 22.4f);			quadTo(31f, 21.8f, 31f, 21f);			lineTo(31f, 15f);			quadTo(31f, 14.2f, 31.6f, 13.6f);			quadTo(32.2f, 13f, 33f, 13f);			quadTo(33.8f, 13f, 34.4f, 13.6f);	}}		public Paint P0 = new Paint(); 		public static int Color0 = (0x00695b99); 		public Path0 S0 = new Path0();		public Paint P1 = new Paint(); 		public static int Color1 = (0xFFd6d6d6); 		public Path1 S1 = new Path1();		public Paint P2 = new Paint(); 		public static int Color2 = (0xFFffffff); 		public Path2 S2 = new Path2();		public Paint P3 = new Paint(); 		public static int Color3 = (0xFFd6d6d6); 		public Path3 S3 = new Path3();		public Paint P4 = new Paint(); 		public static int Color4 = (0xFFffffff); 		public Path4 S4 = new Path4();		public Paint P5 = new Paint(); 		public static int Color5 = (0xFFd6d6d6); 		public Path5 S5 = new Path5();		public Paint P6 = new Paint(); 		public static int Color6 = (0xFFffffff); 		public Path6 S6 = new Path6();		public static float Ht = 50F; 		public static float Wh = 50F;  		public eqlizerIcon(int width,int height,int x,int y) {			this.width = width;			this.height = height;			init((float)width/(float)Wh, (float)height/(float)Ht, x, y); 			LinearGradient Lg  = null;			S0.transform(matrix);			P0.setColor(0x00695b99);			P0.setAntiAlias(true);			S1.transform(matrix);			P1.setColor(0xFFd6d6d6);			P1.setAntiAlias(true);			S2.transform(matrix);			P2.setColor(0xFFffffff);			P2.setAntiAlias(true);			S3.transform(matrix);			P3.setColor(0xFFd6d6d6);			P3.setAntiAlias(true);			S4.transform(matrix);			P4.setColor(0xFFffffff);			P4.setAntiAlias(true);			S5.transform(matrix);			P5.setColor(0xFFd6d6d6);			P5.setAntiAlias(true);			S6.transform(matrix);			P6.setColor(0xFFffffff);			P6.setAntiAlias(true);			mask = S0;			maskPaint = P0;		} 		public void draw(Canvas canvas) { 			if(drawing){				canvas.drawPath(S0, P0);				canvas.drawPath(S1, P1);				canvas.drawPath(S2, P2);				canvas.drawPath(S3, P3);				canvas.drawPath(S4, P4);				canvas.drawPath(S5, P5);				canvas.drawPath(S6, P6);			}		} 		@Override 		public void setX(int x) {			super.setX(x);			 S0.transform(matrix);			 S1.transform(matrix);			 S2.transform(matrix);			 S3.transform(matrix);			 S4.transform(matrix);			 S5.transform(matrix);			 S6.transform(matrix);		} 		@Override 		public void setY(int x) {			super.setY(x);			 S0.transform(matrix);			 S1.transform(matrix);			 S2.transform(matrix);			 S3.transform(matrix);			 S4.transform(matrix);			 S5.transform(matrix);			 S6.transform(matrix);		} 		@Override 		public void setSize(int wh, int ht) {			super.setSize(wh, ht);			 S0.transform(matrix);			 S1.transform(matrix);			 S2.transform(matrix);			 S3.transform(matrix);			 S4.transform(matrix);			 S5.transform(matrix);			 S6.transform(matrix);		} 		 public static ShapeView getFMview(Context context,boolean mask){		   ShapeView view = new ShapeView(context, Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht));		   final eqlizerIcon viewImg = new eqlizerIcon(Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht),0,0);		   view.mask = mask;		   view.img = viewImg;		   viewImg.mask = viewImg.S0;		   viewImg.maskPaint = viewImg.P0; 		   return view;		 }      		 public static eqlizerIcon getShape(){		   final eqlizerIcon viewImg = new eqlizerIcon(Ui.cd.getHt((int) Wh), Ui.cd.getHt((int) Ht),0,0);		   viewImg.mask = viewImg.S0;		   viewImg.maskPaint = viewImg.P0; 		   return viewImg;		 }     }//Finished...! 